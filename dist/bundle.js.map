{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://findpaircards/./src/template-engine.ts","webpack://findpaircards/./src/mainScreen.ts","webpack://findpaircards/./src/time.ts","webpack://findpaircards/./src/flipforFiveSecond.ts","webpack://findpaircards/./src/flipCardlogic.ts","webpack://findpaircards/./src/winFunc.ts","webpack://findpaircards/./src/screenGame.ts","webpack://findpaircards/./src/gameStart.ts","webpack://findpaircards/./src/index.ts","webpack://findpaircards/./src/looseScreen.ts","webpack://findpaircards/./src/winScreen.ts"],"sourcesContent":["// interface Template {\n//     tag: String\n//     cls: String\n//     attrs: {\n//         type: String\n//         id: Number\n//         value: Number\n//         name: String\n//         for: Number\n//     }\n//     content: []\n// }\n\nexport function templateEngine(block: any) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('')\n    }\n    if (\n        typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true\n    ) {\n        return document.createTextNode(block)\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment()\n\n        block.forEach((item) => {\n            const el = templateEngine(item)\n\n            fragment.appendChild(el)\n        })\n\n        return fragment\n    }\n\n    const element = document.createElement(block.tag)\n\n    if (block.cls) {\n        element.classList.add(...[].concat(block.cls).filter(Boolean))\n    }\n\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs)\n\n        keys.forEach((key) => {\n            element.setAttribute(key, block.attrs[key])\n        })\n    }\n\n    const content = templateEngine(block.content)\n\n    element.appendChild(content)\n\n    return element\n}\n","import { templateEngine } from './template-engine'\ninterface Template {\n    tag: String\n    cls: String\n    attrs: {\n        type: String\n        id: Number\n        value: Number\n        name: String\n        for: Number\n    }\n    content: []\n}\nlet template = {\n    tag: 'form',\n    cls: 'game_lvl',\n    content: [\n        {\n            tag: 'h4',\n            cls: 'game_lvl-title',\n            content: 'Выберите сложность',\n        },\n        {\n            tag: 'div',\n            cls: 'game_lvl-dif',\n            content: [\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 1,\n                            },\n                            content: 1,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 1,\n                                value: 1,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 2,\n                            },\n                            content: 2,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 2,\n                                value: 2,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 3,\n                            },\n                            content: 3,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 3,\n                                value: 3,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            tag: 'button',\n            cls: 'game_lvl-btn',\n            content: 'Старт',\n        },\n    ],\n}\n\nexport function mainScreen(container: HTMLElement) {\n    container.innerHTML = ''\n    const result: HTMLElement | null = document.querySelector('.result')\n    result!.style.zIndex = '-1'\n    container.appendChild(templateEngine(template))\n}\n\n// window.application.screens['mainScreen'] = mainScreen\n","const timerMin = document.querySelector('.game_timer-minnum')\nconst timerSek = document.querySelector('.game_timer-seknum')\nconst timerButton = document.querySelector('.game_lvl-btn')\nlet timer: number = 0 // : NodeJS.Timeout\nlet secs = 0\nlet now = 0\nlet min = 0\nexport function time() {\n    secs = Math.floor((Date.now() - now) / 1000)\n    if (String(min).length !== 2 && min < 10 && String(min).length < 3) {\n        ;(min as unknown as string) = '0' + min\n    }\n    if (secs === 60) {\n        now = Date.now()\n        min = min + 1\n        if (min < 10) {\n            // console.log(min)\n            ;(min as unknown as string) = '0' + min\n        }\n    }\n    if (secs < 10) {\n        ;(secs as unknown as string) = '0' + secs\n    }\n    const timerMin = document.querySelector('.game_timer-minnum')\n    const timerSek = document.querySelector('.game_timer-seknum')\n    if (!timerMin) {\n        return\n    }\n\n    if (\n        window.application.status === 'Loose' ||\n        window.application.status === 'Win'\n    ) {\n        return\n    }\n    timerMin!.innerHTML = String(min)\n    timerSek!.innerHTML = String(secs)\n    window.application.timers = min + '.' + secs\n    // if (window.application.timers === '03.00') {\n    //     window.application.status = 'Loose'\n    //     console.log('going to the loose screen')\n    // }\n}\n\nexport function timeGo() {\n    now = Date.now()\n    min = 0\n    let timer: number = window.setInterval(time)\n    window.application.timerTest['timerId'] = timer\n}\n","import { timeGo } from './time'\n\nconst gameFieldCard = document.querySelectorAll('.game_field-card')\nconst result = document.querySelector('.result')\n\nexport function flipForFiveSecond(callback: Function) {\n    clearInterval(window.application.timerWin.timeout)\n    const gameFieldCard = document.querySelectorAll('.game_field-card')\n    const result = document.querySelector('.result')\n    gameFieldCard.forEach((element) => {\n        element.classList.add('flip')\n    })\n    setTimeout(() => {\n        // debugger\n        gameFieldCard.forEach((element) => {\n            element.classList.remove('flip')\n        })\n        let timeout = setInterval(callback, 1000)\n        window.application.timerWin['timeout'] = timeout\n        timeGo()\n    }, 5000)\n    // setInterval(callback(), 1000)\n}\n","import { time } from './time'\nlet hasFlippedCard = false\nlet lockBoard = false\nlet firstCard: HTMLElement | null, secondCard: HTMLElement | null\nconst gameFieldCard = document.querySelectorAll('.game_field-card')\n\nexport function flipCard(this: HTMLElement) {\n    if (lockBoard) return\n    if (this === firstCard) return\n    this.classList.add('flip')\n\n    if (!hasFlippedCard) {\n        hasFlippedCard = true\n        firstCard = this\n        return\n    }\n    secondCard = this\n    // hasFlippedCard = false\n\n    checkForMatch()\n}\n\nexport function checkForMatch() {\n    let isMatch = firstCard!.dataset.game === secondCard!.dataset.game\n    isMatch ? disableCards() : unflipCards()\n}\n\nexport function disableCards() {\n    firstCard!.removeEventListener('click', flipCard)\n    secondCard!.removeEventListener('click', flipCard)\n    resetBoard()\n}\n\nexport function unflipCards() {\n    lockBoard = true\n    window.application.status = 'Loose'\n    window.application.lvl = []\n    window.application.timerTest.timerId = 0\n    // let timer: any = window.clearInterval(time as any)\n    console.log('going to the loose screen')\n    const result = document.querySelector('.result')\n    window.application.screens.looseScreen(result)\n    // setTimeout(() => {\n    //     firstCard.classList.remove('flip')\n    //     secondCard.classList.remove('flip')\n    //     resetBoard()\n    // }, 1500)\n}\n\nexport function resetBoard() {\n    ;[hasFlippedCard, lockBoard] = [false, false]\n    ;[firstCard, secondCard] = [null, null]\n}\n\nexport function shuffle() {\n    gameFieldCard.forEach((card: any) => {\n        let ramdomPos: number = Math.floor(Math.random() * 18)\n        card.style.order = ramdomPos\n    })\n}\n","import { time } from './time'\nexport function winFunc() {\n    if (document.querySelector('.game_field')) {\n        let allCardsArray = document.querySelectorAll('.game_field-card')\n        let howMuch = allCardsArray.length\n        let howNow = 0\n        allCardsArray.forEach((element) => {\n            if (element.classList.contains('flip')) {\n                howNow++\n            }\n        })\n        if (howMuch === howNow) {\n            window.application.status = 'Win'\n            window.application.lvl = []\n            // let timer: any = window.clearInterval(time as any)\n            console.log('go to win page')\n            // clearInterval(callback)\n            const result = document.querySelector('.result')\n            window.application.screens.winScreen(result)\n            clearInterval(window.application.timerWin.timeout)\n        }\n    }\n}\n","import { stringify } from 'postcss'\nimport { templateEngine } from './template-engine'\nimport { flipForFiveSecond } from './flipforFiveSecond'\nimport { time, timeGo } from './time'\nimport {\n    flipCard,\n    checkForMatch,\n    disableCards,\n    unflipCards,\n    resetBoard,\n    shuffle,\n} from './flipCardlogic'\nimport { winFunc } from './winFunc'\n\ninterface Card {\n    img: String\n    data: String\n}\nlet card: Card = {\n    img: './cards/cardBack.jpg',\n    data: 'back',\n}\nlet cardsLight: Card[] = []\ncardsLight.push({\n    img: './cards/one.jpg',\n    data: 'one',\n})\ncardsLight.push({\n    img: './cards/2.jpg',\n    data: 'two',\n})\ncardsLight.push({\n    img: './cards/3.jpg',\n    data: 'three',\n})\n\n// let cardsLight = [\n//     {\n//         img: './cards/one.jpg',\n//         data: 'one',\n//     },\n//     {\n//         img: './cards/2.jpg',\n//         data: 'two',\n//     },\n//     {\n//         img: './cards/3.jpg',\n//         data: 'three',\n//     },\n// ]\n\nlet cardsMedium: Card[] = []\ncardsMedium.push({\n    img: './cards/one.jpg',\n    data: 'one',\n})\ncardsMedium.push({\n    img: './cards/2.jpg',\n    data: 'two',\n})\ncardsMedium.push({\n    img: './cards/3.jpg',\n    data: 'three',\n})\ncardsMedium.push({\n    img: './cards/4.jpg',\n    data: 'four',\n})\ncardsMedium.push({\n    img: './cards/5.jpg',\n    data: 'five',\n})\ncardsMedium.push({\n    img: './cards/6.jpg',\n    data: 'six',\n})\n// let cardsMedium = [\n//     {\n//         img: './cards/one.jpg',\n//         data: 'one',\n//     },\n//     {\n//         img: './cards/2.jpg',\n//         data: 'two',\n//     },\n//     {\n//         img: './cards/3.jpg',\n//         data: 'three',\n//     },\n//     {\n//         img: './cards/4.jpg',\n//         data: 'four',\n//     },\n//     {\n//         img: './cards/5.jpg',\n//         data: 'five',\n//     },\n//     {\n//         img: './cards/6.jpg',\n//         data: 'six',\n//     },\n// ]\n\nlet cardsHard: Card[] = []\ncardsHard.push({\n    img: './cards/one.jpg',\n    data: 'one',\n})\ncardsHard.push({\n    img: './cards/2.jpg',\n    data: 'two',\n})\ncardsHard.push({\n    img: './cards/3.jpg',\n    data: 'three',\n})\ncardsHard.push({\n    img: './cards/4.jpg',\n    data: 'four',\n})\ncardsHard.push({\n    img: './cards/5.jpg',\n    data: 'five',\n})\ncardsHard.push({\n    img: './cards/6.jpg',\n    data: 'six',\n})\ncardsHard.push({\n    img: './cards/7.jpg',\n    data: 'seven',\n})\ncardsHard.push({\n    img: './cards/8.jpg',\n    data: 'eight',\n})\ncardsHard.push({\n    img: './cards/9.jpg',\n    data: 'nine',\n})\n// let cardsHard = [\n//     {\n//         img: './cards/one.jpg',\n//         data: 'one',\n//     },\n//     {\n//         img: './cards/2.jpg',\n//         data: 'two',\n//     },\n//     {\n//         img: './cards/3.jpg',\n//         data: 'three',\n//     },\n//     {\n//         img: './cards/4.jpg',\n//         data: 'four',\n//     },\n//     {\n//         img: './cards/5.jpg',\n//         data: 'five',\n//     },\n//     {\n//         img: './cards/6.jpg',\n//         data: 'six',\n//     },\n//     {\n//         img: './cards/7.jpg',\n//         data: 'seven',\n//     },\n//     {\n//         img: './cards/8.jpg',\n//         data: 'eight',\n//     },\n//     {\n//         img: './cards/9.jpg',\n//         data: 'nine',\n//     },\n// ]\nexport function cardFrontTemplate(bloc: Card) {\n    return {\n        tag: 'div',\n        cls: 'game_field-card',\n        attrs: {\n            'data-game': bloc.data,\n        },\n        content: [\n            {\n                // tag: 'div',\n                // cls: 'game_field-cardfront',\n                // content: [\n                //     {\n                tag: 'img',\n                cls: 'game_field-cardfront',\n                attrs: {\n                    src: bloc.img,\n                },\n            },\n            //     ],\n            // },\n        ],\n    }\n}\nexport function cardBackTemplate(bloc: Card) {\n    return {\n        // tag: 'div',\n        // cls: 'game_field-cardback',\n        // content: [\n        // {\n        tag: 'img',\n        cls: 'game_field-cardback',\n        attrs: {\n            src: bloc.img,\n        },\n        // },\n        // ],\n    }\n}\nexport function renderLvlScreen(container: HTMLElement | null) {\n    container!.innerHTML = ''\n    const gameScreen = document.createElement('div')\n    gameScreen.classList.add('game_playscreen')\n    container!.appendChild(gameScreen)\n    const header = document.createElement('div')\n    header.classList.add('game_header')\n    gameScreen.appendChild(header)\n    const gameField = document.createElement('div')\n    gameField.classList.add('game_field')\n    gameScreen.appendChild(gameField)\n    const gameTimer = document.createElement('div')\n    gameTimer.classList.add('game_timer')\n    header.appendChild(gameTimer)\n    const gameTimerMin = document.createElement('div')\n    gameTimerMin.classList.add('game_timer-min')\n    gameTimer.appendChild(gameTimerMin)\n    const gameTimerText = document.createElement('div')\n    gameTimerText.classList.add('game_timer-text')\n    gameTimerMin.appendChild(gameTimerText)\n    gameTimerText.textContent = 'min'\n    const gameTimerMinNum = document.createElement('div')\n    gameTimerMinNum.classList.add('game_timer-minnum')\n    gameTimerMin.appendChild(gameTimerMinNum)\n    gameTimerMinNum.textContent = '00'\n    const gameTimerComma = document.createElement('div')\n    gameTimerComma.classList.add('game_timer-comma')\n    gameTimer.appendChild(gameTimerComma)\n    gameTimerComma.textContent = '.'\n    const gameTimerSek = document.createElement('div')\n    gameTimerSek.classList.add('game_timer-sek')\n    gameTimer.appendChild(gameTimerSek)\n    const gameTimerSekTxt = document.createElement('div')\n    gameTimerSekTxt.classList.add('game_timer-text')\n    gameTimerSek.appendChild(gameTimerSekTxt)\n    gameTimerSekTxt.textContent = 'sek'\n    const gameTimerSekNum = document.createElement('div')\n    gameTimerSekNum.classList.add('game_timer-seknum')\n    gameTimerSek.appendChild(gameTimerSekNum)\n    gameTimerSekNum.textContent = '00'\n    const gameHeaderButton = document.createElement('button')\n    gameHeaderButton.classList.add('game_lvl-btn')\n    header.appendChild(gameHeaderButton)\n    gameHeaderButton.textContent = 'Начать заново'\n    if (window.application.lvl === '1') {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsLight.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    } else if (window.application.lvl === '2') {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsMedium.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    } else {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsHard.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    }\n    let hasFlippedCard = false\n    let lockBoard = false\n    let firstCard: HTMLElement | null, secondCard: HTMLElement | null\n    const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n    lvlScreenLogicStart()\n    // const gameFieldCard = document.querySelectorAll('.game_field-card')\n    // const result = document.querySelector('.result')\n\n    // function flipForFiveSecond(callback: Function) {\n    //     gameFieldCard.forEach((element) => {\n    //         element.classList.add('flip')\n    //     })\n    //     setTimeout(() => {\n    //         // debugger\n    //         gameFieldCard.forEach((element) => {\n    //             element.classList.remove('flip')\n    //         })\n    //         let timeout = setInterval(callback, 1000)\n    //         window.application.timerWin['timeout'] = timeout\n    //         timeGo()\n    //     }, 5000)\n    //     // setInterval(callback(), 1000)\n    // }\n\n    // flipForFiveSecond(winFunc)\n\n    // function flipCard(this: HTMLElement) {\n    //     if (lockBoard) return\n    //     if (this === firstCard) return\n    //     this.classList.add('flip')\n\n    //     if (!hasFlippedCard) {\n    //         hasFlippedCard = true\n    //         firstCard = this\n    //         return\n    //     }\n    //     secondCard = this\n    //     // hasFlippedCard = false\n\n    //     checkForMatch()\n    // }\n\n    // function checkForMatch() {\n    //     let isMatch = firstCard!.dataset.game === secondCard!.dataset.game\n    //     isMatch ? disableCards() : unflipCards()\n    // }\n\n    // function disableCards() {\n    //     firstCard!.removeEventListener('click', flipCard)\n    //     secondCard!.removeEventListener('click', flipCard)\n    //     resetBoard()\n    // }\n\n    // function unflipCards() {\n    //     lockBoard = true\n    //     window.application.status = 'Loose'\n    //     window.application.lvl = []\n    //     console.log('going to the loose screen')\n    //     const result = document.querySelector('.result')\n    //     window.application.screens.looseScreen(result)\n    //     // setTimeout(() => {\n    //     //     firstCard.classList.remove('flip')\n    //     //     secondCard.classList.remove('flip')\n    //     //     resetBoard()\n    //     // }, 1500)\n    // }\n\n    // function resetBoard() {\n    //     ;[hasFlippedCard, lockBoard] = [false, false]\n    //     ;[firstCard, secondCard] = [null, null]\n    // }\n\n    // ;(function shuffle() {\n    //     gameFieldCard.forEach((card: any) => {\n    //         let ramdomPos: number = Math.floor(Math.random() * 18)\n    //         card.style.order = ramdomPos\n    //     })\n    // })()\n\n    // flipForFiveSecond()\n\n    // gameFieldCard.forEach((card) => card.addEventListener('click', flipCard))\n\n    // let hasFlippedCard = false\n    // let lockBoard = false\n    // let firstCard: HTMLElement | null, secondCard: HTMLElement | null\n\n    // const timerMin = document.querySelector('.game_timer-minnum')\n    // const timerSek = document.querySelector('.game_timer-seknum')\n    // const timerButton = document.querySelector('.game_lvl-btn')\n    // let timer: number = 0 // : NodeJS.Timeout\n    // let secs = 0\n    // let now = 0\n    // let min = 0\n    // function time() {\n    //     secs = Math.floor((Date.now() - now) / 1000)\n    //     if (String(min).length !== 2 && min < 10) {\n    //         ;(min as unknown as string) = '0' + min\n    //     }\n    //     if (secs === 60) {\n    //         now = Date.now()\n    //         min++\n    //         if (min < 10) {\n    //             // console.log(min)\n    //             ;(min as unknown as string) = '0' + min\n    //         }\n    //     }\n    //     if (secs < 10) {\n    //         ;(secs as unknown as string) = '0' + secs\n    //     }\n    //     timerMin!.innerHTML = String(min)\n    //     timerSek!.innerHTML = String(secs)\n    //     window.application.timers = min + '.' + secs\n    //     // if (window.application.timers === '03.00') {\n    //     //     window.application.status = 'Loose'\n    //     //     console.log('going to the loose screen')\n    //     // }\n    // }\n\n    // let timeGo = function () {\n    //     now = Date.now()\n    //     min = 0\n    //     let timer: number = window.setInterval(time)\n    // }\n    // timeGo()\n\n    // timerButton!.addEventListener('click', () => {\n    //     let gameWindow = document.querySelector('.game')\n    //     window.application.timers = min + '.' + secs\n    //     let timer: any = window.clearInterval(time as any)\n    //     now = Date.now()\n    //     min = 0\n    //     timer = setInterval(time)\n    //     clearInterval(window.application.timerWin.timeout)\n    //     window.application.screens.screenGame(gameWindow)\n    // })\n}\n\n// window.application.screens['screenGame'] = renderLvlScreen\n\n// const allCardsArray = document.querySelectorAll('.game_field-card')\n// const checkForWin = setInterval(winFunc(), 1000)\n// const checkForWin = () => {\n//     setInterval(() => {\n//         // debugger\n//         // if (document.querySelector('.game_field')) {\n//         //     let allCardsArray = document.querySelectorAll('.game_field-card')\n//         //     let howMuch = allCardsArray.length\n//         //     let howNow = 0\n//         //     allCardsArray.forEach((element) => {\n//         //         if (element.classList.contains('flip')) {\n//         //             howNow++\n//         //         }\n//         //     })\n//         //     if (howMuch === howNow) {\n//         //         window.application.status = 'Win'\n//         //         console.log('go to win page')\n//         //     }\n//         // }\n//     }, 1000)\n// }\n\n// function winFunc() {\n//     if (document.querySelector('.game_field')) {\n//         let allCardsArray = document.querySelectorAll('.game_field-card')\n//         let howMuch = allCardsArray.length\n//         let howNow = 0\n//         allCardsArray.forEach((element) => {\n//             if (element.classList.contains('flip')) {\n//                 howNow++\n//             }\n//         })\n//         if (howMuch === howNow) {\n//             window.application.status = 'Win'\n//             window.application.lvl = []\n//             console.log('go to win page')\n//             // clearInterval(callback)\n//             const result = document.querySelector('.result')\n//             window.application.screens.winScreen(result)\n//             clearInterval(window.application.timerWin.timeout)\n//         }\n//     }\n// }\n\n// setInterval(() => {\n//     // debugger\n//     if (document.querySelector('.game_field')) {\n//         let allCardsArray = document.querySelectorAll('.game_field-card')\n//         let howMuch = allCardsArray.length\n//         let howNow = 0\n//         allCardsArray.forEach((element) => {\n//             if (element.classList.contains('flip')) {\n//                 howNow++\n//             }\n//         })\n//         if (howMuch === howNow) {\n//             window.application.status = 'Win'\n//             console.log('go to win page')\n//         }\n//     }\n// }, 1000)\n\n// function flipCardsForFiveSec() {\n//     return new Promise(() => {\n//         // function flipForFiveSecond() {\n//         gameFieldCard.forEach((element) => {\n//             element.classList.add('flip')\n//         })\n//         setTimeout(() => {\n//             gameFieldCard.forEach((element) => {\n//                 element.classList.remove('flip')\n//             })\n//         }, 5000)\n//         console.log('Пользователи отрендерены')\n//         // }\n//         // setTimeout( ()=> {\n//         //     console.log( 'Пользователи отрендерены' );\n//         // resolve('рузультирующее значение, которое передано дальше')\n//         // }, 3000 );\n//     })\n// }\n\n// if (document.querySelector('.game_field')) {\n//     flipCardsForFiveSec().then(\n//         setInterval(() => {\n//             // debugger\n//             if (document.querySelector('.game_field')) {\n//                 let allCardsArray =\n//                     document.querySelectorAll('.game_field-card')\n//                 let howMuch = allCardsArray.length\n//                 let howNow = 0\n//                 allCardsArray.forEach((element) => {\n//                     if (element.classList.contains('flip')) {\n//                         howNow++\n//                     }\n//                 })\n//                 if (howMuch === howNow) {\n//                     window.application.status = 'Win'\n//                     console.log('go to win page')\n//                 }\n//             }\n//         }, 1000)\n//     )\n// }\n\nexport function lvlScreenLogicStart() {\n    const gameFieldCard = document.querySelectorAll('.game_field-card')\n    const result = document.querySelector('.result')\n\n    flipForFiveSecond(winFunc)\n\n    // gameFieldCard.forEach((card) => card.addEventListener('click', flipCard))\n\n    let hasFlippedCard = false\n    let lockBoard = false\n    let firstCard: HTMLElement | null, secondCard: HTMLElement | null\n\n    const timerMin = document.querySelector('.game_timer-minnum')\n    const timerSek = document.querySelector('.game_timer-seknum')\n    const timerButton = document.querySelector('.game_lvl-btn')\n    let timer: number = 0 // : NodeJS.Timeout\n    let secs = 0\n    let now = 0\n    let min = 0\n\n    gameFieldCard.forEach((card) => card.addEventListener('click', flipCard))\n\n    timerButton!.addEventListener('click', () => {\n        let timer: any = 0\n        let secs = 0\n        let now = 0\n        let min = 0\n        let gameWindow = document.querySelector('.game')\n        window.application.timers = min + '.' + secs\n\n        window.application.timerTest.timerId.forEach(function (element: any) {\n            clearInterval(element)\n        })\n\n        // window.application.timerTest.forEach(function (element: any) {\n        //     clearInterval(element)\n        // })\n\n        //   window.application.timers.forEach(element => {\n        //     clearInterval(element);\n        // }\n\n        // clearInterval(window.application.timerTest.timerId)\n\n        // window.application.timerTest\n        // window.clearInterval(timer as any)\n        now = Date.now()\n        min = 0\n        timer = setInterval(time)\n        clearInterval(window.application.timerWin.timeout)\n        window.application.screens.screenGame(gameWindow)\n    })\n}\n","// const gameWindow = document.querySelector('.game')\nexport function gameStart() {\n    const gameWindow = document.querySelector('.game')\n    window.application.screens.mainScreen(gameWindow)\n\n    const form: HTMLFormElement | null = document.querySelector('.game_lvl')\n    const inputs = document.querySelectorAll('.game_lvl-input')\n\n    form!.addEventListener('submit', (event) => {\n        event.preventDefault()\n\n        let goToLvl = form!.elements['lvl'].value\n        console.log(form!.elements['lvl'].value)\n        window.application.lvl = goToLvl\n        goToLvl === ''\n            ? console.log('choose the lvl!')\n            : window.application.screens.screenGame(gameWindow)\n    })\n}\n\n// window.application.screens['gameStart'] = gameStart\n","import './style.css'\nimport { templateEngine } from './template-engine'\nimport { mainScreen } from './mainScreen'\nimport { cardFrontTemplate } from './screenGame'\nimport { cardBackTemplate } from './screenGame'\nimport { renderLvlScreen , lvlScreenLogicStart} from './screenGame'\nimport { winScreen } from './winScreen'\nimport { gameStart } from './gameStart'\nimport { looseScreen } from './looseScreen'\nimport { winFunc } from './winFunc'\nimport { flipForFiveSecond } from './flipforFiveSecond'\nimport { time, timeGo } from './time'\nimport {\n    flipCard,\n    checkForMatch,\n    disableCards,\n    unflipCards,\n    resetBoard,\n    shuffle,\n} from './flipCardlogic'\n\nconst gameWindow: HTMLElement | null = document.querySelector('.game')\nwindow.application = {\n    status: {},\n    screens: {},\n    lvl: [],\n    renderScreen: function (screenName: string) {\n        window.application.timers.forEach((element: number) => {\n            clearInterval(element)\n        })\n\n        if (!window.application.screens[screenName]) {\n            console.warn('Такой страницы нет')\n        } else {\n            gameWindow!.innerHTML = ''\n            this.screens[screenName]\n        }\n    },\n    timers: [],\n    timerWin: [],\n    timerTest: [],\n}\n\nwindow.application.screens['mainScreen'] = mainScreen\n// window.application.screens.mainScreen(gameWindow)\nwindow.application.screens['gameStart'] = gameStart\ngameStart()\n\nwindow.application.screens['screenGame'] = renderLvlScreen\nwindow.application.screens['looseScreen'] = looseScreen\nwindow.application.screens['winScreen'] = winScreen\n","import { gameStart } from './gameStart'\nimport { time } from './time'\nexport function looseScreen(container: HTMLElement | null) {\n    container!.style.zIndex = '2'\n    const looseBlock = document.createElement('div')\n    container!.appendChild(looseBlock)\n    looseBlock.classList.add('result_field')\n\n    const resultFrame = document.createElement('div')\n    looseBlock.appendChild(resultFrame)\n    resultFrame.classList.add('result_frame')\n\n    const resultFrameLoose = document.createElement('div')\n    resultFrame.appendChild(resultFrameLoose)\n    resultFrameLoose.classList.add('result_frame-loose')\n\n    const resultFrameLooseImg = document.createElement('img')\n    resultFrameLoose.appendChild(resultFrameLooseImg)\n    resultFrameLooseImg.classList.add('result_frame-img')\n    resultFrameLooseImg.src = './cards/paimonangry.png'\n\n    const resultFrameYouLoose = document.createElement('h4')\n    resultFrameLoose.appendChild(resultFrameYouLoose)\n    resultFrameYouLoose.classList.add('result_frame-youloose')\n    resultFrameYouLoose.textContent = 'Вы проиграли!'\n\n    const resultFrameTime = document.createElement('div')\n    resultFrame.appendChild(resultFrameTime)\n    resultFrameTime.classList.add('result_frame-time')\n\n    const resultFrameTimeTxt = document.createElement('h5')\n    resultFrameTime.appendChild(resultFrameTimeTxt)\n    resultFrameTimeTxt.classList.add('result_frame-timetxt')\n    resultFrameTimeTxt.textContent = 'Затраченное время:'\n\n    const resultFrameTimeNum = document.createElement('h3')\n    resultFrameTime.appendChild(resultFrameTimeNum)\n    resultFrameTimeTxt.classList.add('result_frame-timenum')\n    resultFrameTimeTxt.textContent = window.application.timers\n\n    const resultFrameBtn = document.createElement('button')\n    resultFrame.appendChild(resultFrameBtn)\n    resultFrameBtn.classList.add('result_frame-btn')\n    resultFrameBtn.textContent = 'Играть снова'\n\n    resultFrameBtn.addEventListener('click', () => {\n        let gameWindow = document.querySelector('.game')\n        const result = document.querySelector('.result')\n        let timer: any = window.clearInterval(time as any)\n        window.application.status = {}\n        window.application.lvl = []\n        window.application.timers = []\n        window.application.timerWin = []\n        window.application.timerTest = []\n        result!.innerHTML = ''\n        gameWindow!.innerHTML = ''\n        window.application.screens.mainScreen(gameWindow)\n        gameStart()\n    })\n}\n\n// window.application.screens['looseScreen'] = looseScreen\n","export function winScreen(container: HTMLElement | null) {\n    container!.style.zIndex = '2'\n    const winBlock = document.createElement('div')\n    container!.appendChild(winBlock)\n    winBlock.classList.add('result_field')\n\n    const resultFrame = document.createElement('div')\n    winBlock.appendChild(resultFrame)\n    resultFrame.classList.add('result_frame')\n\n    const resultFrameWin = document.createElement('div')\n    resultFrame.appendChild(resultFrameWin)\n    resultFrameWin.classList.add('result_frame-win')\n\n    const resultFrameWinImg = document.createElement('img')\n    resultFrameWin.appendChild(resultFrameWinImg)\n    resultFrameWinImg.classList.add('result_frame-img')\n    resultFrameWinImg.src = './cards/paimonhappy.png'\n\n    const resultFrameYouWin = document.createElement('h4')\n    resultFrameWin.appendChild(resultFrameYouWin)\n    resultFrameYouWin.classList.add('result_frame-youwin')\n    resultFrameYouWin.textContent = 'Вы выиграли!'\n\n    const resultFrameTime = document.createElement('div')\n    resultFrame.appendChild(resultFrameTime)\n    resultFrameTime.classList.add('result_frame-time')\n\n    const resultFrameTimeTxt = document.createElement('h5')\n    resultFrameTime.appendChild(resultFrameTimeTxt)\n    resultFrameTimeTxt.classList.add('result_frame-timetxt')\n    resultFrameTimeTxt.textContent = 'Затраченное время:'\n\n    const resultFrameTimeNum = document.createElement('h3')\n    resultFrameTime.appendChild(resultFrameTimeNum)\n    resultFrameTimeNum.classList.add('result_frame-timenum')\n    // resultFrameTimeNum.textContent = window.application.timers\n\n    const resultFrameBtn = document.createElement('button')\n    resultFrame.appendChild(resultFrameBtn)\n    resultFrameBtn.classList.add('result_frame-btn')\n    resultFrameBtn.textContent = 'Играть снова'\n\n    resultFrameBtn.addEventListener('click', () => {\n        let gameWindow = document.querySelector('.game')\n        const result = document.querySelector('.result')\n        result!.innerHTML = ''\n        // window.application.screens.mainScreen(gameWindow)\n    })\n}\n\n// window.application.screens['winScreen'] = winScreen\n"],"names":["templateEngine","block","document","createTextNode","Array","isArray","createDocumentFragment","forEach","item","el","appendChild","element","createElement","tag","cls","classList","add","concat","filter","Boolean","attrs","Object","keys","key","setAttribute","content","template","for","type","id","value","name","querySelector","secs","now","min","time","Math","floor","Date","String","length","timerMin","timerSek","window","application","status","innerHTML","timers","querySelectorAll","firstCard","secondCard","hasFlippedCard","lockBoard","flipCard","this","dataset","game","removeEventListener","lvl","timerTest","timerId","console","log","result","screens","looseScreen","unflipCards","winFunc","allCardsArray","howMuch","contains","winScreen","clearInterval","timerWin","timeout","card","img","data","cardsLight","push","cardsMedium","cardsHard","cardFrontTemplate","bloc","src","cardBackTemplate","gameStart","gameWindow","mainScreen","form","addEventListener","event","preventDefault","goToLvl","elements","screenGame","renderScreen","screenName","warn","container","style","zIndex","gameScreen","header","gameField","gameTimer","gameTimerMin","gameTimerText","textContent","gameTimerMinNum","gameTimerComma","gameTimerSek","gameTimerSekTxt","gameTimerSekNum","gameHeaderButton","i","map","gameFieldCard","callback","setTimeout","remove","setInterval","timer","timeGo","flipForFiveSecond","timerButton","lvlScreenLogicStart","looseBlock","resultFrame","resultFrameLoose","resultFrameLooseImg","resultFrameYouLoose","resultFrameTime","resultFrameTimeTxt","resultFrameTimeNum","resultFrameBtn","winBlock","resultFrameWin","resultFrameWinImg","resultFrameYouWin"],"sourceRoot":""}