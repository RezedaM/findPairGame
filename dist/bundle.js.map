{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://findpaircards/./src/mainScreen.js","webpack://findpaircards/./src/screenGame.js","webpack://findpaircards/./src/winScreen.js","webpack://findpaircards/./src/gameStart.js","webpack://findpaircards/./src/looseScreen.js","webpack://findpaircards/./src/index.js"],"sourcesContent":["let template = {\n    tag: 'form',\n    cls: 'game_lvl',\n    content: [\n        {\n            tag: 'h4',\n            cls: 'game_lvl-title',\n            content: 'Выберите сложность',\n        },\n        {\n            tag: 'div',\n            cls: 'game_lvl-dif',\n            content: [\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 1,\n                            },\n                            content: 1,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 1,\n                                value: 1,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 2,\n                            },\n                            content: 2,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 2,\n                                value: 2,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 3,\n                            },\n                            content: 3,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 3,\n                                value: 3,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            tag: 'button',\n            cls: 'game_lvl-btn',\n            content: 'Старт',\n        },\n    ],\n}\n\nexport function mainScreen(container) {\n    container.innerHTML = ''\n    const result = document.querySelector('.result')\n    result.style.zIndex = '-1'\n    container.appendChild(templateEngine(template))\n}\n\nwindow.application.screens['mainScreen'] = mainScreen\n","let card = {\n    img: './cards/cardBack.jpg',\n    data: 'back',\n}\n\nlet cardsLight = [\n    {\n        img: './cards/one.jpg',\n        data: 'one',\n    },\n    {\n        img: './cards/2.jpg',\n        data: 'two',\n    },\n    {\n        img: './cards/3.jpg',\n        data: 'three',\n    },\n]\nlet cardsMedium = [\n    {\n        img: './cards/one.jpg',\n        data: 'one',\n    },\n    {\n        img: './cards/2.jpg',\n        data: 'two',\n    },\n    {\n        img: './cards/3.jpg',\n        data: 'three',\n    },\n    {\n        img: './cards/4.jpg',\n        data: 'four',\n    },\n    {\n        img: './cards/5.jpg',\n        data: 'five',\n    },\n    {\n        img: './cards/6.jpg',\n        data: 'six',\n    },\n]\nlet cardsHard = [\n    {\n        img: './cards/one.jpg',\n        data: 'one',\n    },\n    {\n        img: './cards/2.jpg',\n        data: 'two',\n    },\n    {\n        img: './cards/3.jpg',\n        data: 'three',\n    },\n    {\n        img: './cards/4.jpg',\n        data: 'four',\n    },\n    {\n        img: './cards/5.jpg',\n        data: 'five',\n    },\n    {\n        img: './cards/6.jpg',\n        data: 'six',\n    },\n    {\n        img: './cards/7.jpg',\n        data: 'seven',\n    },\n    {\n        img: './cards/8.jpg',\n        data: 'eight',\n    },\n    {\n        img: './cards/9.jpg',\n        data: 'nine',\n    },\n]\nexport function cardFrontTemplate(bloc) {\n    return {\n        tag: 'div',\n        cls: 'game_field-card',\n        attrs: {\n            'data-game': bloc.data,\n        },\n        content: [\n            {\n                // tag: 'div',\n                // cls: 'game_field-cardfront',\n                // content: [\n                //     {\n                tag: 'img',\n                cls: 'game_field-cardfront',\n                attrs: {\n                    src: bloc.img,\n                },\n            },\n            //     ],\n            // },\n        ],\n    }\n}\nexport function cardBackTemplate(bloc) {\n    return {\n        // tag: 'div',\n        // cls: 'game_field-cardback',\n        // content: [\n        // {\n        tag: 'img',\n        cls: 'game_field-cardback',\n        attrs: {\n            src: bloc.img,\n        },\n        // },\n        // ],\n    }\n}\nexport function renderLvlScreen(container) {\n    container.innerHTML = ''\n    const gameScreen = document.createElement('div')\n    gameScreen.classList.add('game_playscreen')\n    container.appendChild(gameScreen)\n    const header = document.createElement('div')\n    header.classList.add('game_header')\n    gameScreen.appendChild(header)\n    const gameField = document.createElement('div')\n    gameField.classList.add('game_field')\n    gameScreen.appendChild(gameField)\n    const gameTimer = document.createElement('div')\n    gameTimer.classList.add('game_timer')\n    header.appendChild(gameTimer)\n    const gameTimerMin = document.createElement('div')\n    gameTimerMin.classList.add('game_timer-min')\n    gameTimer.appendChild(gameTimerMin)\n    const gameTimerText = document.createElement('div')\n    gameTimerText.classList.add('game_timer-text')\n    gameTimerMin.appendChild(gameTimerText)\n    gameTimerText.textContent = 'min'\n    const gameTimerMinNum = document.createElement('div')\n    gameTimerMinNum.classList.add('game_timer-minnum')\n    gameTimerMin.appendChild(gameTimerMinNum)\n    gameTimerMinNum.textContent = '00'\n    const gameTimerComma = document.createElement('div')\n    gameTimerComma.classList.add('game_timer-comma')\n    gameTimer.appendChild(gameTimerComma)\n    gameTimerComma.textContent = '.'\n    const gameTimerSek = document.createElement('div')\n    gameTimerSek.classList.add('game_timer-sek')\n    gameTimer.appendChild(gameTimerSek)\n    const gameTimerSekTxt = document.createElement('div')\n    gameTimerSekTxt.classList.add('game_timer-text')\n    gameTimerSek.appendChild(gameTimerSekTxt)\n    gameTimerSekTxt.textContent = 'sek'\n    const gameTimerSekNum = document.createElement('div')\n    gameTimerSekNum.classList.add('game_timer-seknum')\n    gameTimerSek.appendChild(gameTimerSekNum)\n    gameTimerSekNum.textContent = '00'\n    const gameHeaderButton = document.createElement('button')\n    gameHeaderButton.classList.add('game_lvl-btn')\n    header.appendChild(gameHeaderButton)\n    gameHeaderButton.textContent = 'Начать заново'\n    if (window.application.lvl === '1') {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsLight.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    } else if (window.application.lvl === '2') {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsMedium.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    } else {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsHard.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    }\n    const gameFieldCard = document.querySelectorAll('.game_field-card')\n    const result = document.querySelector('.result')\n\n    function flipForFiveSecond(callback) {\n        gameFieldCard.forEach((element) => {\n            element.classList.add('flip')\n        })\n        setTimeout(() => {\n            // debugger\n            gameFieldCard.forEach((element) => {\n                element.classList.remove('flip')\n            })\n            let timeout = setInterval(callback, 1000)\n            window.application.timerWin['timeout'] = timeout\n            timeGo()\n        }, 5000)\n        // setInterval(callback(), 1000)\n    }\n\n    flipForFiveSecond(winFunc)\n\n    function flipCard() {\n        if (lockBoard) return\n        if (this === firstCard) return\n        this.classList.add('flip')\n\n        if (!hasFlippedCard) {\n            hasFlippedCard = true\n            firstCard = this\n            return\n        }\n        secondCard = this\n        // hasFlippedCard = false\n\n        checkForMatch()\n    }\n\n    function checkForMatch() {\n        let isMatch = firstCard.dataset.game === secondCard.dataset.game\n        isMatch ? disableCards() : unflipCards()\n    }\n\n    function disableCards() {\n        firstCard.removeEventListener('click', flipCard)\n        secondCard.removeEventListener('click', flipCard)\n        resetBoard()\n    }\n\n    function unflipCards() {\n        lockBoard = true\n        window.application.status = 'Loose'\n        console.log('going to the loose screen')\n        const result = document.querySelector('.result')\n        window.application.screens.looseScreen(result)\n        // setTimeout(() => {\n        //     firstCard.classList.remove('flip')\n        //     secondCard.classList.remove('flip')\n        //     resetBoard()\n        // }, 1500)\n    }\n\n    function resetBoard() {\n        ;[hasFlippedCard, lockBoard] = [false, false]\n        ;[firstCard, secondCard] = [null, null]\n    }\n\n    ;(function shuffle() {\n        gameFieldCard.forEach((card) => {\n            let ramdomPos = Math.floor(Math.random() * 18)\n            card.style.order = ramdomPos\n        })\n    })()\n\n    // flipForFiveSecond()\n\n    gameFieldCard.forEach((card) => card.addEventListener('click', flipCard))\n\n    let hasFlippedCard = false\n    let lockBoard = false\n    let firstCard, secondCard\n\n    const timerMin = document.querySelector('.game_timer-minnum')\n    const timerSek = document.querySelector('.game_timer-seknum')\n    const timerButton = document.querySelector('.game_lvl-btn')\n    let timer = 0\n    let secs = 0\n    let now = 0\n    let min = 0\n    function time() {\n        secs = Math.floor((Date.now() - now) / 1000)\n        if (min.length !== 2 && min < 10) {\n            min = '0' + min\n        }\n        if (secs === 60) {\n            now = Date.now()\n            min++\n            if (min < 10) {\n                console.log(min)\n                min = '0' + min\n            }\n        }\n        if (secs < 10) {\n            secs = '0' + secs\n        }\n        timerMin.innerHTML = min\n        timerSek.innerHTML = secs\n        window.application.timers = min + '.' + secs\n        // if (window.application.timers === '03.00') {\n        //     window.application.status = 'Loose'\n        //     console.log('going to the loose screen')\n        // }\n    }\n\n    let timeGo = function () {\n        now = Date.now()\n        min = 0\n        timer = setInterval(time)\n    }\n    // timeGo()\n\n    timerButton.addEventListener('click', () => {\n        window.application.timers = min + '.' + secs\n        timer = clearInterval(time)\n        now = Date.now()\n        min = 0\n        timer = setInterval(time)\n        clearInterval(window.application.timerWin.timeout)\n        window.application.screens.screenGame(gameWindow)\n    })\n}\n\nwindow.application.screens['screenGame'] = renderLvlScreen\n\n// const allCardsArray = document.querySelectorAll('.game_field-card')\n// const checkForWin = setInterval(winFunc(), 1000)\n// const checkForWin = () => {\n//     setInterval(() => {\n//         // debugger\n//         // if (document.querySelector('.game_field')) {\n//         //     let allCardsArray = document.querySelectorAll('.game_field-card')\n//         //     let howMuch = allCardsArray.length\n//         //     let howNow = 0\n//         //     allCardsArray.forEach((element) => {\n//         //         if (element.classList.contains('flip')) {\n//         //             howNow++\n//         //         }\n//         //     })\n//         //     if (howMuch === howNow) {\n//         //         window.application.status = 'Win'\n//         //         console.log('go to win page')\n//         //     }\n//         // }\n//     }, 1000)\n// }\n\nfunction winFunc() {\n    if (document.querySelector('.game_field')) {\n        let allCardsArray = document.querySelectorAll('.game_field-card')\n        let howMuch = allCardsArray.length\n        let howNow = 0\n        allCardsArray.forEach((element) => {\n            if (element.classList.contains('flip')) {\n                howNow++\n            }\n        })\n        if (howMuch === howNow) {\n            window.application.status = 'Win'\n            console.log('go to win page')\n            // clearInterval(callback)\n            const result = document.querySelector('.result')\n            window.application.screens.winScreen(result)\n            clearInterval(window.application.timerWin.timeout)\n        }\n    }\n}\n\n// setInterval(() => {\n//     // debugger\n//     if (document.querySelector('.game_field')) {\n//         let allCardsArray = document.querySelectorAll('.game_field-card')\n//         let howMuch = allCardsArray.length\n//         let howNow = 0\n//         allCardsArray.forEach((element) => {\n//             if (element.classList.contains('flip')) {\n//                 howNow++\n//             }\n//         })\n//         if (howMuch === howNow) {\n//             window.application.status = 'Win'\n//             console.log('go to win page')\n//         }\n//     }\n// }, 1000)\n\n// function flipCardsForFiveSec() {\n//     return new Promise(() => {\n//         // function flipForFiveSecond() {\n//         gameFieldCard.forEach((element) => {\n//             element.classList.add('flip')\n//         })\n//         setTimeout(() => {\n//             gameFieldCard.forEach((element) => {\n//                 element.classList.remove('flip')\n//             })\n//         }, 5000)\n//         console.log('Пользователи отрендерены')\n//         // }\n//         // setTimeout( ()=> {\n//         //     console.log( 'Пользователи отрендерены' );\n//         // resolve('рузультирующее значение, которое передано дальше')\n//         // }, 3000 );\n//     })\n// }\n\n// if (document.querySelector('.game_field')) {\n//     flipCardsForFiveSec().then(\n//         setInterval(() => {\n//             // debugger\n//             if (document.querySelector('.game_field')) {\n//                 let allCardsArray =\n//                     document.querySelectorAll('.game_field-card')\n//                 let howMuch = allCardsArray.length\n//                 let howNow = 0\n//                 allCardsArray.forEach((element) => {\n//                     if (element.classList.contains('flip')) {\n//                         howNow++\n//                     }\n//                 })\n//                 if (howMuch === howNow) {\n//                     window.application.status = 'Win'\n//                     console.log('go to win page')\n//                 }\n//             }\n//         }, 1000)\n//     )\n// }\n","export function winScreen(container) {\n    container.style.zIndex = '2'\n    const winBlock = document.createElement('div')\n    container.appendChild(winBlock)\n    winBlock.classList.add('result_field')\n\n    const resultFrame = document.createElement('div')\n    winBlock.appendChild(resultFrame)\n    resultFrame.classList.add('result_frame')\n\n    const resultFrameWin = document.createElement('div')\n    resultFrame.appendChild(resultFrameWin)\n    resultFrameWin.classList.add('result_frame-win')\n\n    const resultFrameWinImg = document.createElement('img')\n    resultFrameWin.appendChild(resultFrameWinImg)\n    resultFrameWinImg.classList.add('result_frame-img')\n    resultFrameWinImg.src = './cards/paimonhappy.png'\n\n    const resultFrameYouWin = document.createElement('h4')\n    resultFrameWin.appendChild(resultFrameYouWin)\n    resultFrameYouWin.classList.add('result_frame-youwin')\n    resultFrameYouWin.textContent = 'Вы выиграли!'\n\n    const resultFrameTime = document.createElement('div')\n    resultFrame.appendChild(resultFrameTime)\n    resultFrameTime.classList.add('result_frame-time')\n\n    const resultFrameTimeTxt = document.createElement('h5')\n    resultFrameTime.appendChild(resultFrameTimeTxt)\n    resultFrameTimeTxt.classList.add('result_frame-timetxt')\n    resultFrameTimeTxt.textContent = 'Затраченное время:'\n\n    const resultFrameTimeNum = document.createElement('h3')\n    resultFrameTime.appendChild(resultFrameTimeNum)\n    resultFrameTimeNum.classList.add('result_frame-timenum')\n    resultFrameTimeNum.textContent = window.application.timers\n\n    const resultFrameBtn = document.createElement('button')\n    resultFrame.appendChild(resultFrameBtn)\n    resultFrameBtn.classList.add('result_frame-btn')\n    resultFrameBtn.textContent = 'Играть снова'\n\n    resultFrameBtn.addEventListener('click', () => {\n        const result = document.querySelector('.result')\n        result.innerHTML = ''\n        window.application.screens.mainScreen(gameWindow)\n    })\n}\n\nwindow.application.screens['winScreen'] = winScreen\n","// const gameWindow = document.querySelector('.game')\nexport function gameStart() {\n    // window.application.screens.mainScreen(gameWindow)\n\n    const form = document.querySelector('.game_lvl')\n    const inputs = document.querySelectorAll('.game_lvl-input')\n\n    form.addEventListener('submit', (event) => {\n        event.preventDefault()\n\n        let goToLvl = form.elements['lvl'].value\n        console.log(form.elements['lvl'].value)\n        window.application.lvl = goToLvl\n        goToLvl === ''\n            ? console.log('choose the lvl!')\n            : window.application.screens.screenGame(gameWindow)\n    })\n}\n\nwindow.application.screens['gameStart'] = gameStart\n","export function looseScreen(container) {\n    container.style.zIndex = '2'\n    const looseBlock = document.createElement('div')\n    container.appendChild(looseBlock)\n    looseBlock.classList.add('result_field')\n\n    const resultFrame = document.createElement('div')\n    looseBlock.appendChild(resultFrame)\n    resultFrame.classList.add('result_frame')\n\n    const resultFrameLoose = document.createElement('div')\n    resultFrame.appendChild(resultFrameLoose)\n    resultFrameLoose.classList.add('result_frame-loose')\n\n    const resultFrameLooseImg = document.createElement('img')\n    resultFrameLoose.appendChild(resultFrameLooseImg)\n    resultFrameLooseImg.classList.add('result_frame-img')\n    resultFrameLooseImg.src = './cards/paimonangry.png'\n\n    const resultFrameYouLoose = document.createElement('h4')\n    resultFrameLoose.appendChild(resultFrameYouLoose)\n    resultFrameYouLoose.classList.add('result_frame-youloose')\n    resultFrameYouLoose.textContent = 'Вы проиграли!'\n\n    const resultFrameTime = document.createElement('div')\n    resultFrame.appendChild(resultFrameTime)\n    resultFrameTime.classList.add('result_frame-time')\n\n    const resultFrameTimeTxt = document.createElement('h5')\n    resultFrameTime.appendChild(resultFrameTimeTxt)\n    resultFrameTimeTxt.classList.add('result_frame-timetxt')\n    resultFrameTimeTxt.textContent = 'Затраченное время:'\n\n    const resultFrameTimeNum = document.createElement('h3')\n    resultFrameTime.appendChild(resultFrameTimeNum)\n    resultFrameTimeTxt.classList.add('result_frame-timenum')\n    resultFrameTimeTxt.textContent = window.application.timers\n\n    const resultFrameBtn = document.createElement('button')\n    resultFrame.appendChild(resultFrameBtn)\n    resultFrameBtn.classList.add('result_frame-btn')\n    resultFrameBtn.textContent = 'Играть снова'\n\n    resultFrameBtn.addEventListener('click', () => {\n        const result = document.querySelector('.result')\n        result.innerHTML = ''\n        window.application.screens.mainScreen(gameWindow)\n    })\n}\n\nwindow.application.screens['looseScreen'] = looseScreen\n","import './style.css'\nimport { templateEngine } from './template-engine'\nimport { mainScreen } from './mainScreen'\nimport { cardFrontTemplate } from './screenGame'\nimport { cardBackTemplate } from './screenGame'\nimport { renderLvlScreen } from './screenGame'\nimport { winScreen } from './winScreen'\nimport { gameStart, rwinScreen } from './gameStart'\nimport { lgameStart } from './looseScreen'\n\nconst gameWindow = document.querySelector('.game')\nwindow.application = {\n    status: {},\n    screens: {},\n    lvl: [],\n    renderScreen: function (screenName) {\n        window.application.timers.forEach((element) => {\n            clearInterval(element)\n        })\n\n        if (!window.application.screens[screenName]) {\n            console.warn('Такой страницы нет')\n        } else {\n            gameWindow.innerHTML = ''\n            this.screens[screenName]\n        }\n    },\n    timers: [],\n    timerWin: [],\n}\n\nwindow.application.screens['mainScreen'] = mainScreen\nwindow.application.screens.mainScreen(gameWindow)\nwindow.application.screens['gameStart'] = gameStart\ngameStart()\n\nwindow.application.screens['screenGame'] = renderLvlScreen\nwindow.application.screens['looseScreen'] = looseScreen\nwindow.application.screens['winScreen'] = winScreen\n"],"names":["template","tag","cls","content","attrs","for","type","id","value","name","mainScreen","container","innerHTML","document","querySelector","style","zIndex","appendChild","templateEngine","window","application","screens","card","img","data","cardsLight","cardsMedium","cardsHard","cardFrontTemplate","bloc","src","cardBackTemplate","renderLvlScreen","gameScreen","createElement","classList","add","header","gameField","gameTimer","gameTimerMin","gameTimerText","textContent","gameTimerMinNum","gameTimerComma","gameTimerSek","gameTimerSekTxt","gameTimerSekNum","gameHeaderButton","lvl","i","map","querySelectorAll","forEach","element","gameFieldCard","callback","flipCard","lockBoard","this","firstCard","hasFlippedCard","secondCard","dataset","game","removeEventListener","status","console","log","result","looseScreen","unflipCards","winFunc","setTimeout","remove","timeout","setInterval","timerWin","timeGo","ramdomPos","Math","floor","random","order","addEventListener","timerMin","timerSek","timerButton","timer","secs","now","min","time","Date","length","timers","clearInterval","screenGame","gameWindow","allCardsArray","howMuch","howNow","contains","winScreen","winBlock","resultFrame","resultFrameWin","resultFrameWinImg","resultFrameYouWin","resultFrameTime","resultFrameTimeTxt","resultFrameTimeNum","resultFrameBtn","gameStart","form","event","preventDefault","goToLvl","elements","looseBlock","resultFrameLoose","resultFrameLooseImg","resultFrameYouLoose","renderScreen","screenName","warn"],"sourceRoot":""}