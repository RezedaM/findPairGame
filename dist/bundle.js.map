{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://findpaircards/./src/template-engine.ts","webpack://findpaircards/./src/mainScreen.ts","webpack://findpaircards/./src/screenGame.ts","webpack://findpaircards/./src/gameStart.ts","webpack://findpaircards/./src/index.ts","webpack://findpaircards/./src/looseScreen.ts","webpack://findpaircards/./src/winScreen.ts"],"sourcesContent":["// interface Template {\n//     tag: String\n//     cls: String\n//     attrs: {\n//         type: String\n//         id: Number\n//         value: Number\n//         name: String\n//         for: Number\n//     }\n//     content: []\n// }\n\nexport function templateEngine(block: any) {\n    if (block === undefined || block === null || block === false) {\n        return document.createTextNode('')\n    }\n    if (\n        typeof block === 'string' ||\n        typeof block === 'number' ||\n        block === true\n    ) {\n        return document.createTextNode(block)\n    }\n    if (Array.isArray(block)) {\n        const fragment = document.createDocumentFragment()\n\n        block.forEach((item) => {\n            const el = templateEngine(item)\n\n            fragment.appendChild(el)\n        })\n\n        return fragment\n    }\n\n    const element = document.createElement(block.tag)\n\n    if (block.cls) {\n        element.classList.add(...[].concat(block.cls).filter(Boolean))\n    }\n\n    if (block.attrs) {\n        const keys = Object.keys(block.attrs)\n\n        keys.forEach((key) => {\n            element.setAttribute(key, block.attrs[key])\n        })\n    }\n\n    const content = templateEngine(block.content)\n\n    element.appendChild(content)\n\n    return element\n}\n","import { templateEngine } from './template-engine'\ninterface Template {\n    tag: String\n    cls: String\n    attrs: {\n        type: String\n        id: Number\n        value: Number\n        name: String\n        for: Number\n    }\n    content: []\n}\nlet template = {\n    tag: 'form',\n    cls: 'game_lvl',\n    content: [\n        {\n            tag: 'h4',\n            cls: 'game_lvl-title',\n            content: 'Выберите сложность',\n        },\n        {\n            tag: 'div',\n            cls: 'game_lvl-dif',\n            content: [\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 1,\n                            },\n                            content: 1,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 1,\n                                value: 1,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 2,\n                            },\n                            content: 2,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 2,\n                                value: 2,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n                {\n                    tag: 'div',\n                    cls: 'game_lvl-inputs',\n                    content: [\n                        {\n                            tag: 'label',\n                            cls: 'game_lvl-label',\n                            attrs: {\n                                for: 3,\n                            },\n                            content: 3,\n                        },\n                        {\n                            tag: 'input',\n                            cls: 'game_lvl-input',\n                            attrs: {\n                                type: 'radio',\n                                id: 3,\n                                value: 3,\n                                name: 'lvl',\n                            },\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            tag: 'button',\n            cls: 'game_lvl-btn',\n            content: 'Старт',\n        },\n    ],\n}\n\nexport function mainScreen(container: HTMLElement) {\n    container.innerHTML = ''\n    const result: HTMLElement | null = document.querySelector('.result')\n    result!.style.zIndex = '-1'\n    container.appendChild(templateEngine(template))\n}\n\n// window.application.screens['mainScreen'] = mainScreen\n","import { stringify } from 'postcss'\nimport { templateEngine } from './template-engine'\n\ninterface Card {\n    img: String\n    data: String\n}\nlet card: Card = {\n    img: './cards/cardBack.jpg',\n    data: 'back',\n}\nlet cardsLight: Card[] = []\ncardsLight.push({\n    img: './cards/one.jpg',\n    data: 'one',\n})\ncardsLight.push({\n    img: './cards/2.jpg',\n    data: 'two',\n})\ncardsLight.push({\n    img: './cards/3.jpg',\n    data: 'three',\n})\n\n// let cardsLight = [\n//     {\n//         img: './cards/one.jpg',\n//         data: 'one',\n//     },\n//     {\n//         img: './cards/2.jpg',\n//         data: 'two',\n//     },\n//     {\n//         img: './cards/3.jpg',\n//         data: 'three',\n//     },\n// ]\n\nlet cardsMedium: Card[] = []\ncardsMedium.push({\n    img: './cards/one.jpg',\n    data: 'one',\n})\ncardsMedium.push({\n    img: './cards/2.jpg',\n    data: 'two',\n})\ncardsMedium.push({\n    img: './cards/3.jpg',\n    data: 'three',\n})\ncardsMedium.push({\n    img: './cards/4.jpg',\n    data: 'four',\n})\ncardsMedium.push({\n    img: './cards/5.jpg',\n    data: 'five',\n})\ncardsMedium.push({\n    img: './cards/6.jpg',\n    data: 'six',\n})\n// let cardsMedium = [\n//     {\n//         img: './cards/one.jpg',\n//         data: 'one',\n//     },\n//     {\n//         img: './cards/2.jpg',\n//         data: 'two',\n//     },\n//     {\n//         img: './cards/3.jpg',\n//         data: 'three',\n//     },\n//     {\n//         img: './cards/4.jpg',\n//         data: 'four',\n//     },\n//     {\n//         img: './cards/5.jpg',\n//         data: 'five',\n//     },\n//     {\n//         img: './cards/6.jpg',\n//         data: 'six',\n//     },\n// ]\n\nlet cardsHard: Card[] = []\ncardsHard.push({\n    img: './cards/one.jpg',\n    data: 'one',\n})\ncardsHard.push({\n    img: './cards/2.jpg',\n    data: 'two',\n})\ncardsHard.push({\n    img: './cards/3.jpg',\n    data: 'three',\n})\ncardsHard.push({\n    img: './cards/4.jpg',\n    data: 'four',\n})\ncardsHard.push({\n    img: './cards/5.jpg',\n    data: 'five',\n})\ncardsHard.push({\n    img: './cards/6.jpg',\n    data: 'six',\n})\ncardsHard.push({\n    img: './cards/7.jpg',\n    data: 'seven',\n})\ncardsHard.push({\n    img: './cards/8.jpg',\n    data: 'eight',\n})\ncardsHard.push({\n    img: './cards/9.jpg',\n    data: 'nine',\n})\n// let cardsHard = [\n//     {\n//         img: './cards/one.jpg',\n//         data: 'one',\n//     },\n//     {\n//         img: './cards/2.jpg',\n//         data: 'two',\n//     },\n//     {\n//         img: './cards/3.jpg',\n//         data: 'three',\n//     },\n//     {\n//         img: './cards/4.jpg',\n//         data: 'four',\n//     },\n//     {\n//         img: './cards/5.jpg',\n//         data: 'five',\n//     },\n//     {\n//         img: './cards/6.jpg',\n//         data: 'six',\n//     },\n//     {\n//         img: './cards/7.jpg',\n//         data: 'seven',\n//     },\n//     {\n//         img: './cards/8.jpg',\n//         data: 'eight',\n//     },\n//     {\n//         img: './cards/9.jpg',\n//         data: 'nine',\n//     },\n// ]\nexport function cardFrontTemplate(bloc: Card) {\n    return {\n        tag: 'div',\n        cls: 'game_field-card',\n        attrs: {\n            'data-game': bloc.data,\n        },\n        content: [\n            {\n                // tag: 'div',\n                // cls: 'game_field-cardfront',\n                // content: [\n                //     {\n                tag: 'img',\n                cls: 'game_field-cardfront',\n                attrs: {\n                    src: bloc.img,\n                },\n            },\n            //     ],\n            // },\n        ],\n    }\n}\nexport function cardBackTemplate(bloc: Card) {\n    return {\n        // tag: 'div',\n        // cls: 'game_field-cardback',\n        // content: [\n        // {\n        tag: 'img',\n        cls: 'game_field-cardback',\n        attrs: {\n            src: bloc.img,\n        },\n        // },\n        // ],\n    }\n}\nexport function renderLvlScreen(container: HTMLElement | null) {\n    container!.innerHTML = ''\n    const gameScreen = document.createElement('div')\n    gameScreen.classList.add('game_playscreen')\n    container!.appendChild(gameScreen)\n    const header = document.createElement('div')\n    header.classList.add('game_header')\n    gameScreen.appendChild(header)\n    const gameField = document.createElement('div')\n    gameField.classList.add('game_field')\n    gameScreen.appendChild(gameField)\n    const gameTimer = document.createElement('div')\n    gameTimer.classList.add('game_timer')\n    header.appendChild(gameTimer)\n    const gameTimerMin = document.createElement('div')\n    gameTimerMin.classList.add('game_timer-min')\n    gameTimer.appendChild(gameTimerMin)\n    const gameTimerText = document.createElement('div')\n    gameTimerText.classList.add('game_timer-text')\n    gameTimerMin.appendChild(gameTimerText)\n    gameTimerText.textContent = 'min'\n    const gameTimerMinNum = document.createElement('div')\n    gameTimerMinNum.classList.add('game_timer-minnum')\n    gameTimerMin.appendChild(gameTimerMinNum)\n    gameTimerMinNum.textContent = '00'\n    const gameTimerComma = document.createElement('div')\n    gameTimerComma.classList.add('game_timer-comma')\n    gameTimer.appendChild(gameTimerComma)\n    gameTimerComma.textContent = '.'\n    const gameTimerSek = document.createElement('div')\n    gameTimerSek.classList.add('game_timer-sek')\n    gameTimer.appendChild(gameTimerSek)\n    const gameTimerSekTxt = document.createElement('div')\n    gameTimerSekTxt.classList.add('game_timer-text')\n    gameTimerSek.appendChild(gameTimerSekTxt)\n    gameTimerSekTxt.textContent = 'sek'\n    const gameTimerSekNum = document.createElement('div')\n    gameTimerSekNum.classList.add('game_timer-seknum')\n    gameTimerSek.appendChild(gameTimerSekNum)\n    gameTimerSekNum.textContent = '00'\n    const gameHeaderButton = document.createElement('button')\n    gameHeaderButton.classList.add('game_lvl-btn')\n    header.appendChild(gameHeaderButton)\n    gameHeaderButton.textContent = 'Начать заново'\n    if (window.application.lvl === '1') {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsLight.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    } else if (window.application.lvl === '2') {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsMedium.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    } else {\n        for (let i = 0; i < 2; i++) {\n            gameField.appendChild(\n                templateEngine(cardsHard.map(cardFrontTemplate))\n            )\n        }\n        const gameFieldCard = document.querySelectorAll('.game_field-card')\n\n        gameFieldCard.forEach((element) => {\n            element.appendChild(templateEngine(cardBackTemplate(card)))\n        })\n    }\n    const gameFieldCard = document.querySelectorAll('.game_field-card')\n    const result = document.querySelector('.result')\n\n    function flipForFiveSecond(callback: Function) {\n        gameFieldCard.forEach((element) => {\n            element.classList.add('flip')\n        })\n        setTimeout(() => {\n            // debugger\n            gameFieldCard.forEach((element) => {\n                element.classList.remove('flip')\n            })\n            let timeout = setInterval(callback, 1000)\n            window.application.timerWin['timeout'] = timeout\n            timeGo()\n        }, 5000)\n        // setInterval(callback(), 1000)\n    }\n\n    flipForFiveSecond(winFunc)\n\n    function flipCard(this: HTMLElement) {\n        if (lockBoard) return\n        if (this === firstCard) return\n        this.classList.add('flip')\n\n        if (!hasFlippedCard) {\n            hasFlippedCard = true\n            firstCard = this\n            return\n        }\n        secondCard = this\n        // hasFlippedCard = false\n\n        checkForMatch()\n    }\n\n    function checkForMatch() {\n        let isMatch = firstCard!.dataset.game === secondCard!.dataset.game\n        isMatch ? disableCards() : unflipCards()\n    }\n\n    function disableCards() {\n        firstCard!.removeEventListener('click', flipCard)\n        secondCard!.removeEventListener('click', flipCard)\n        resetBoard()\n    }\n\n    function unflipCards() {\n        lockBoard = true\n        window.application.status = 'Loose'\n        window.application.lvl = []\n        console.log('going to the loose screen')\n        const result = document.querySelector('.result')\n        window.application.screens.looseScreen(result)\n        // setTimeout(() => {\n        //     firstCard.classList.remove('flip')\n        //     secondCard.classList.remove('flip')\n        //     resetBoard()\n        // }, 1500)\n    }\n\n    function resetBoard() {\n        ;[hasFlippedCard, lockBoard] = [false, false]\n        ;[firstCard, secondCard] = [null, null]\n    }\n\n    ;(function shuffle() {\n        gameFieldCard.forEach((card: any) => {\n            let ramdomPos: number = Math.floor(Math.random() * 18)\n            card.style.order = ramdomPos\n        })\n    })()\n\n    // flipForFiveSecond()\n\n    gameFieldCard.forEach((card) => card.addEventListener('click', flipCard))\n\n    let hasFlippedCard = false\n    let lockBoard = false\n    let firstCard: HTMLElement | null, secondCard: HTMLElement | null\n\n    const timerMin = document.querySelector('.game_timer-minnum')\n    const timerSek = document.querySelector('.game_timer-seknum')\n    const timerButton = document.querySelector('.game_lvl-btn')\n    let timer: number = 0 // : NodeJS.Timeout\n    let secs = 0\n    let now = 0\n    let min = 0\n    function time() {\n        secs = Math.floor((Date.now() - now) / 1000)\n        if (String(min).length !== 2 && min < 10) {\n            ;(min as unknown as string) = '0' + min\n        }\n        if (secs === 60) {\n            now = Date.now()\n            min++\n            if (min < 10) {\n                // console.log(min)\n                ;(min as unknown as string) = '0' + min\n            }\n        }\n        if (secs < 10) {\n            ;(secs as unknown as string) = '0' + secs\n        }\n        timerMin!.innerHTML = String(min)\n        timerSek!.innerHTML = String(secs)\n        window.application.timers = min + '.' + secs\n        // if (window.application.timers === '03.00') {\n        //     window.application.status = 'Loose'\n        //     console.log('going to the loose screen')\n        // }\n    }\n\n    let timeGo = function () {\n        now = Date.now()\n        min = 0\n        let timer: number = window.setInterval(time)\n    }\n    // timeGo()\n\n    timerButton!.addEventListener('click', () => {\n        let gameWindow = document.querySelector('.game')\n        window.application.timers = min + '.' + secs\n        let timer: any = window.clearInterval(time as any)\n        now = Date.now()\n        min = 0\n        timer = setInterval(time)\n        clearInterval(window.application.timerWin.timeout)\n        window.application.screens.screenGame(gameWindow)\n    })\n}\n\n// window.application.screens['screenGame'] = renderLvlScreen\n\n// const allCardsArray = document.querySelectorAll('.game_field-card')\n// const checkForWin = setInterval(winFunc(), 1000)\n// const checkForWin = () => {\n//     setInterval(() => {\n//         // debugger\n//         // if (document.querySelector('.game_field')) {\n//         //     let allCardsArray = document.querySelectorAll('.game_field-card')\n//         //     let howMuch = allCardsArray.length\n//         //     let howNow = 0\n//         //     allCardsArray.forEach((element) => {\n//         //         if (element.classList.contains('flip')) {\n//         //             howNow++\n//         //         }\n//         //     })\n//         //     if (howMuch === howNow) {\n//         //         window.application.status = 'Win'\n//         //         console.log('go to win page')\n//         //     }\n//         // }\n//     }, 1000)\n// }\n\nfunction winFunc() {\n    if (document.querySelector('.game_field')) {\n        let allCardsArray = document.querySelectorAll('.game_field-card')\n        let howMuch = allCardsArray.length\n        let howNow = 0\n        allCardsArray.forEach((element) => {\n            if (element.classList.contains('flip')) {\n                howNow++\n            }\n        })\n        if (howMuch === howNow) {\n            window.application.status = 'Win'\n            window.application.lvl = []\n            console.log('go to win page')\n            // clearInterval(callback)\n            const result = document.querySelector('.result')\n            window.application.screens.winScreen(result)\n            clearInterval(window.application.timerWin.timeout)\n        }\n    }\n}\n\n// setInterval(() => {\n//     // debugger\n//     if (document.querySelector('.game_field')) {\n//         let allCardsArray = document.querySelectorAll('.game_field-card')\n//         let howMuch = allCardsArray.length\n//         let howNow = 0\n//         allCardsArray.forEach((element) => {\n//             if (element.classList.contains('flip')) {\n//                 howNow++\n//             }\n//         })\n//         if (howMuch === howNow) {\n//             window.application.status = 'Win'\n//             console.log('go to win page')\n//         }\n//     }\n// }, 1000)\n\n// function flipCardsForFiveSec() {\n//     return new Promise(() => {\n//         // function flipForFiveSecond() {\n//         gameFieldCard.forEach((element) => {\n//             element.classList.add('flip')\n//         })\n//         setTimeout(() => {\n//             gameFieldCard.forEach((element) => {\n//                 element.classList.remove('flip')\n//             })\n//         }, 5000)\n//         console.log('Пользователи отрендерены')\n//         // }\n//         // setTimeout( ()=> {\n//         //     console.log( 'Пользователи отрендерены' );\n//         // resolve('рузультирующее значение, которое передано дальше')\n//         // }, 3000 );\n//     })\n// }\n\n// if (document.querySelector('.game_field')) {\n//     flipCardsForFiveSec().then(\n//         setInterval(() => {\n//             // debugger\n//             if (document.querySelector('.game_field')) {\n//                 let allCardsArray =\n//                     document.querySelectorAll('.game_field-card')\n//                 let howMuch = allCardsArray.length\n//                 let howNow = 0\n//                 allCardsArray.forEach((element) => {\n//                     if (element.classList.contains('flip')) {\n//                         howNow++\n//                     }\n//                 })\n//                 if (howMuch === howNow) {\n//                     window.application.status = 'Win'\n//                     console.log('go to win page')\n//                 }\n//             }\n//         }, 1000)\n//     )\n// }\n","// const gameWindow = document.querySelector('.game')\nexport function gameStart() {\n    const gameWindow = document.querySelector('.game')\n    window.application.screens.mainScreen(gameWindow)\n\n    const form: HTMLFormElement | null = document.querySelector('.game_lvl')\n    const inputs = document.querySelectorAll('.game_lvl-input')\n\n    form!.addEventListener('submit', (event) => {\n        event.preventDefault()\n\n        let goToLvl = form!.elements['lvl'].value\n        console.log(form!.elements['lvl'].value)\n        window.application.lvl = goToLvl\n        goToLvl === ''\n            ? console.log('choose the lvl!')\n            : window.application.screens.screenGame(gameWindow)\n    })\n}\n\n// window.application.screens['gameStart'] = gameStart\n","import './style.css'\nimport { templateEngine } from './template-engine'\nimport { mainScreen } from './mainScreen'\nimport { cardFrontTemplate } from './screenGame'\nimport { cardBackTemplate } from './screenGame'\nimport { renderLvlScreen } from './screenGame'\nimport { winScreen } from './winScreen'\nimport { gameStart } from './gameStart'\nimport { looseScreen } from './looseScreen'\n\nconst gameWindow: HTMLElement | null = document.querySelector('.game')\nwindow.application = {\n    status: {},\n    screens: {},\n    lvl: [],\n    renderScreen: function (screenName: string) {\n        window.application.timers.forEach((element: number) => {\n            clearInterval(element)\n        })\n\n        if (!window.application.screens[screenName]) {\n            console.warn('Такой страницы нет')\n        } else {\n            gameWindow!.innerHTML = ''\n            this.screens[screenName]\n        }\n    },\n    timers: [],\n    timerWin: [],\n}\n\nwindow.application.screens['mainScreen'] = mainScreen\n// window.application.screens.mainScreen(gameWindow)\nwindow.application.screens['gameStart'] = gameStart\ngameStart()\n\nwindow.application.screens['screenGame'] = renderLvlScreen\nwindow.application.screens['looseScreen'] = looseScreen\nwindow.application.screens['winScreen'] = winScreen\n","export function looseScreen(container: HTMLElement | null) {\n    container!.style.zIndex = '2'\n    const looseBlock = document.createElement('div')\n    container!.appendChild(looseBlock)\n    looseBlock.classList.add('result_field')\n\n    const resultFrame = document.createElement('div')\n    looseBlock.appendChild(resultFrame)\n    resultFrame.classList.add('result_frame')\n\n    const resultFrameLoose = document.createElement('div')\n    resultFrame.appendChild(resultFrameLoose)\n    resultFrameLoose.classList.add('result_frame-loose')\n\n    const resultFrameLooseImg = document.createElement('img')\n    resultFrameLoose.appendChild(resultFrameLooseImg)\n    resultFrameLooseImg.classList.add('result_frame-img')\n    resultFrameLooseImg.src = './cards/paimonangry.png'\n\n    const resultFrameYouLoose = document.createElement('h4')\n    resultFrameLoose.appendChild(resultFrameYouLoose)\n    resultFrameYouLoose.classList.add('result_frame-youloose')\n    resultFrameYouLoose.textContent = 'Вы проиграли!'\n\n    const resultFrameTime = document.createElement('div')\n    resultFrame.appendChild(resultFrameTime)\n    resultFrameTime.classList.add('result_frame-time')\n\n    const resultFrameTimeTxt = document.createElement('h5')\n    resultFrameTime.appendChild(resultFrameTimeTxt)\n    resultFrameTimeTxt.classList.add('result_frame-timetxt')\n    resultFrameTimeTxt.textContent = 'Затраченное время:'\n\n    const resultFrameTimeNum = document.createElement('h3')\n    resultFrameTime.appendChild(resultFrameTimeNum)\n    resultFrameTimeTxt.classList.add('result_frame-timenum')\n    resultFrameTimeTxt.textContent = window.application.timers\n\n    const resultFrameBtn = document.createElement('button')\n    resultFrame.appendChild(resultFrameBtn)\n    resultFrameBtn.classList.add('result_frame-btn')\n    resultFrameBtn.textContent = 'Играть снова'\n\n    resultFrameBtn.addEventListener('click', () => {\n        let gameWindow = document.querySelector('.game')\n        const result = document.querySelector('.result')\n        result!.innerHTML = ''\n        window.application.screens.mainScreen(gameWindow)\n    })\n}\n\n// window.application.screens['looseScreen'] = looseScreen\n","export function winScreen(container: HTMLElement | null) {\n    container!.style.zIndex = '2'\n    const winBlock = document.createElement('div')\n    container!.appendChild(winBlock)\n    winBlock.classList.add('result_field')\n\n    const resultFrame = document.createElement('div')\n    winBlock.appendChild(resultFrame)\n    resultFrame.classList.add('result_frame')\n\n    const resultFrameWin = document.createElement('div')\n    resultFrame.appendChild(resultFrameWin)\n    resultFrameWin.classList.add('result_frame-win')\n\n    const resultFrameWinImg = document.createElement('img')\n    resultFrameWin.appendChild(resultFrameWinImg)\n    resultFrameWinImg.classList.add('result_frame-img')\n    resultFrameWinImg.src = './cards/paimonhappy.png'\n\n    const resultFrameYouWin = document.createElement('h4')\n    resultFrameWin.appendChild(resultFrameYouWin)\n    resultFrameYouWin.classList.add('result_frame-youwin')\n    resultFrameYouWin.textContent = 'Вы выиграли!'\n\n    const resultFrameTime = document.createElement('div')\n    resultFrame.appendChild(resultFrameTime)\n    resultFrameTime.classList.add('result_frame-time')\n\n    const resultFrameTimeTxt = document.createElement('h5')\n    resultFrameTime.appendChild(resultFrameTimeTxt)\n    resultFrameTimeTxt.classList.add('result_frame-timetxt')\n    resultFrameTimeTxt.textContent = 'Затраченное время:'\n\n    const resultFrameTimeNum = document.createElement('h3')\n    resultFrameTime.appendChild(resultFrameTimeNum)\n    resultFrameTimeNum.classList.add('result_frame-timenum')\n    // resultFrameTimeNum.textContent = window.application.timers\n\n    const resultFrameBtn = document.createElement('button')\n    resultFrame.appendChild(resultFrameBtn)\n    resultFrameBtn.classList.add('result_frame-btn')\n    resultFrameBtn.textContent = 'Играть снова'\n\n    resultFrameBtn.addEventListener('click', () => {\n        let gameWindow = document.querySelector('.game')\n        const result = document.querySelector('.result')\n        result!.innerHTML = ''\n        // window.application.screens.mainScreen(gameWindow)\n    })\n}\n\n// window.application.screens['winScreen'] = winScreen\n"],"names":["templateEngine","block","document","createTextNode","Array","isArray","createDocumentFragment","forEach","item","el","appendChild","element","createElement","tag","cls","classList","add","concat","filter","Boolean","attrs","Object","keys","key","setAttribute","content","template","for","type","id","value","name","card","img","data","cardsLight","push","cardsMedium","cardsHard","cardFrontTemplate","bloc","src","cardBackTemplate","winFunc","querySelector","allCardsArray","querySelectorAll","howMuch","length","contains","window","application","status","lvl","console","log","result","screens","winScreen","clearInterval","timerWin","timeout","gameStart","gameWindow","mainScreen","form","addEventListener","event","preventDefault","goToLvl","elements","screenGame","renderScreen","screenName","timers","innerHTML","this","warn","container","style","zIndex","gameScreen","header","gameField","gameTimer","gameTimerMin","gameTimerText","textContent","gameTimerMinNum","gameTimerComma","gameTimerSek","gameTimerSekTxt","gameTimerSekNum","gameHeaderButton","i","map","callback","gameFieldCard","flipCard","lockBoard","firstCard","hasFlippedCard","secondCard","dataset","game","removeEventListener","looseScreen","unflipCards","setTimeout","remove","setInterval","timeGo","ramdomPos","Math","floor","random","order","timerMin","timerSek","timerButton","secs","now","min","time","Date","String","looseBlock","resultFrame","resultFrameLoose","resultFrameLooseImg","resultFrameYouLoose","resultFrameTime","resultFrameTimeTxt","resultFrameTimeNum","resultFrameBtn","winBlock","resultFrameWin","resultFrameWinImg","resultFrameYouWin"],"sourceRoot":""}